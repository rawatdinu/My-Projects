<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsbPrint.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFMAAAAoCAYAAACCV8YCAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAGO1JREFUaEO9mgdQ
        XPedx1d27HjmEl88ubskk3EunpvkMnc3mRQnk5xbrMRVVpcs1LGEJFQREkICIVRBHVFkdSSKQMUgW1av
        IASiL7C9wS5L722Xbe/t975vJbCcCw9uzhOGz7zdffX//f/a//9/40R/LxQyf8+Me0ah8D+vEIRvKb71
        3LMKl6df8cILzyt8wrOKZ8c9p1CMcw+fPW7cOIXE0B+/KUD6HV2KF7/zbYWgcCqeUzyjEBV+xbOKF3jY
        s7w2ryH3N47HyO4X5PeDzy/3B9nmy5/713tFsR5yOFxlEPx6CKIZQC1EaLk1EAuxwicahhH8Rh5r5DGm
        YRwDVjgGbfzegkGPBX408rxmQGzEQJ8Jfn+zLPC3QRZeF3KMcr5fbMU3BS2sGnLAb+XDSgI0wOXQQvRS
        LK8eHqcKzj4l4KO4EoLuK0Q9xXpCQPhaYuNxdTzPAMeAFj6v1DlSR+pl8fslwf8/sAP9IyPSSL4pFKKv
        DHIIg3WA1wKfi+L1VNJK6ikahQF/pwVCrJalv+c24CmFs+tRwJIlAd2OGric7AgKLbIz5fALasij434Z
        fAb4/04o/O4SyAF/IcW7RsEvsfE3ySNa6AM4HNLn2xBdtFYZAA2P08LbVwIMUkA/LdirhNdTDqeLAnvZ
        GXL41LRoGbzS9eSgZ3j/PigwWMRGyuDkPucNNuhLilKGwT5alaMeAwN6OH2V8PofDOMR8zGEW8iDRHe/
        Gd1dVQEr9vXlw9t9G4Izj9+VEHzlgJsCy1LD/XJQaLcc7Ey3DB6GqG8Ihd9xC3LAwUQzWA5H+zX0tpch
        /UQ6rnxeguwLN3E0LRVnThQMc/r4A0ikHssf5lTWRSQk7YHPrYXflU8RHwAuWrWnCG5nGfzsSDngokXL
        QuuWLHxERjnfXUqxvxkUYv8XkMPfTqt0X4arNw2CpwA5OWnoc/LZKUs/BuCD+2t4uUfCg8EAvQKwY99B
        GE130NKQzbPu0uUvwUEL9TgqIAzSUmUQXfcYRuS4xf1y3OH+kfG77zLMfTMoHE1p8PdmQeg7w3h2jiql
        Y7DlCNCTBfTm0mo+Q19vDNyDcfD03MXlLB4jMgz5aVyUxs+thMjfhhAEP4bo8fmwZMVi2OseoNV6Fp6+
        0zwhm0noInye+4DjSzhac+DrucZQcodekAOx5yzvzRjdzY7svzwKV7h/ZPwDVyAHHNf5DDIM8BnGiALO
        NKDvFAYaD8HbcQzulqMQ29ng1gygLRtCy3k28ihJRas9H9mnL1AMPr+jR9p87W9I2KfFdfCINetXQa++
        CUcbG41r6LEdYqddhavlSkA4bwfv0/05P1+Cuz0Tng4+Uw/v0/UZRR2N3ECnj4S/jwYhA/q+YPvlYK7o
        GxsKbzfjWdcBuJoPAJ3H4Ws8TJNjA1qP8fsplpjZcFh3oakuEZEbFiPz7E24vJKGbgrs+ppFSpb5tFVK
        nwd4ZMiKpVi+bAqsalq9/TiE5pSABcJ+Hr4Ofu7mfegJYnsWvG2Z8HeTvgxa60mIXRnydJ6FKIOv6yzb
        NzJC9zl2pAxd5yGMEYW7fSsbspvCUcyOBHRrN3G7Fz2mcHgaN7JWTwLa49HVchIfz56Ez66UoNtJ1RgZ
        4XD/Tdf2+UQMIYm5InwjZn/8Hhr1F+G0f8rr7eP9aJ2NifC1Sp8T6QUUtS2V1sgw0plG60yGp3cvBz/H
        RuEE94+MwH1yiO2p7EQ5Tgc8dSwovK0xbMRWCI3RQFM0HLWr6cMxdLkI6rWZNfYW+Nq24NSJiZgw9R3s
        Tj4r2STrRKagwb/y86di6JCrM1dh+uxlmDltIg7Fz4ej8Si6zRt4j3iItk0QaJli2z64bbynnZ3acQoe
        ezJ6rFsZo/lsLRRdFnZ2y8iI3CeHvzUF8nzK/WND4bZFwFe/DoPGED5UOGNPDJyNm9DbuhN1ZjaQF+pv
        PYTExBlYv2kd0i9cZ+IROQb3BYzT6xXg8fiGcbu9eJpuqrkhKg5RUVGIjV6IOsMpdNgSGS+T4WpKQU/d
        cfZ6AjwNEfDW8f6N++Cz7MWAOYqxags9I24U2AENI+Nv3A050LiX95RjP/ePDYXXuoLzDqvgMs2DWL8U
        3obNuHFhAcoeHsXlz48g+9R2XLu8H0mHonE4OQ2HktIQs2sjEo/xt8OZOHjw0DAHDiRgiP37D0IiZsc2
        bN0Zj6TkI4jduhFJSVE4nLQW8VsX4VTSZty+sBmdZsmd18FTG0xPoIjWeHgkMds30XrZoXJYt0CUQbBt
        4eh3ZMT6bWy3DLYdvP/YUDh0cyhmCB9+FtzmxXS3Pfg8bSM8/R6OUJi4WSc6BtwU4BSsBg9UVTaY7JUw
        NCpRpqmFyWQZxmg042kMBhNq7UqYrAaUKWuQ/OkptHX2cSjKi/K/pxWIXvkhVAUbILSuhtM4jXMiKynm
        To4QN8BtWgGxNnIUKHjtyPjqNnF+ZWQE62bIUhcDYYwooH4fbuOfOGSeAlS9A6f5Tzh9LAMDbKx/sANO
        pxT1gD179lA0E5RKJVQqFTQaDdRqNaoq9KhSqlFdU44a7SOodEVQa0ugUSuhUalhUdXAUFMKlbIA22PD
        IHi78OjBfVzPuQG7vhUrQ1bBXjgNnpJp8NXOhbuWglYtB9Qf01KD0FE7h6PJefAb5nPWLxLatg84qn0V
        MO5Hv3EChd8Mh/pdoHQuoIvl97WsFv7M86fDUxONhgoaiz4K7c2vw2FbzN+ZE8oWote4DL0Ns9FkpjfY
        eR31a3Dp56HHwk6sko5j2NPxWvolo7CI+x+jgOo9uAxvQdRODog5aHkbaSfOwikVke4u9Pb2Mh56EBcX
        FxCxpKQEFRUVqKqqCiB9rqgoQ6WyFMqqMlRVKokK1WUa1JTSIguVKCmqgE6jR3z8Lrg8g6hvsMPe0IT+
        ARdWLF6J+odT4S6eysmpOXBZpj4WUzUTbsssxqtlnCehkMa1mP7cSoz7eQTGfX8jFC+9jf23E6EvnEQx
        DjJ5/gbtFTs587cO01+eipZHDBMN0yF0BgF5ayhOGHppKFDxeiVL4G1ag/DvzsS583vQVcIKRv0Jjw+H
        u3kTvPqFvOcn8KhWUpfF8ug+gfiEYTEFDR9K+Zdhy+xjcvENtNIlHSxzfIyLBwPiFRUVobi4OCBqgPJ8
        lJY/QlkZRS1VofKRDsoiAyoL9VA+1ECrtvE8M/LuV2AjExH1w+Vbd3D4zHFobDosX7QCtoIpHFpPYaiZ
        jUEzPaSSDa6ZAZf5YzjzaVlq0rQUH74Uj0PX13NqNAzXT0zFs6+sQI1qOryaCehqnwu97RUIyk0MVxtR
        XLEEfv0EWlsonBWLaGUR6NVNRHflGlYKa+FVRyL8xeVIuLkIdjPvZwmGQ7sSzcpV6C6dAZhnwGufB0FD
        q5NDGwzhCQE3lyzTp54IVIxHv+ENHE9JRRtjZl9bHZqbm9Hd3R0Qs7S0FIWFhXj06FFAVGn7sDQPj0qK
        AtZXUagOUP5QifKiYpQVFSAv/zby7t1nrDUgbvsh1JpbYatvRkNbC8xNFoR+shzWB5M5cTWZMTIIThM9
        pGIpUD0dgyZap/1VuLQTMXBnEvZ/bzqys3+PTooCbQY2KqahVDsBi/55K2bNXoMJfwhC/eXJWP3rKKQ9
        WApf+XxEPTsZS9M24fnvvItffmsXghcwpPTvxkLFTLz4j8uh+Plk7IgMhvXyPM5xh9LK6RVmWrN6Lhoe
        Uij1wjETsMxB/ZuPxaz8Mxymt3As+RSaewbR0WAIWKPBYMDevXuRn5+PgoKCYTElC71PcQseFqOooBSl
        BWUo5eeSovsoKrmBB6WXUV51E6XFN3H36mXERW+Ds20A92/kIfVkWiBxLQsODYjppLv+tZhOIy1ETxdU
        MQyYNuGj38xCwp1dtLKp+Dx+Dl7+0wLUlEVh7vcjMSlsBuMik5c9DB+++Dbir6yltU3CrP+ahZ8G0fLK
        olGbOhOKn0QisomW2hCGeT9+F9HX3oCljm23MBYrmYRL6e4VFNM4l0mQlvl/ErOaSUf3Bk2Zbl79Lly1
        43Hi8Gk0djnQXKdGS0tLwDLPnTsXSDharRY6nW44CSlVZqjUBiYbLcffKmg1VajWVaDcWIEiUzlKNGUo
        ry6F3WrC2RPH0GmzwdXZi/6OfjTWt45qmQ7Vh+goZYLQJ2HKt9/Cc7+IYbycgRf/aRLuFm5mDTkPk37w
        Kg6VTIezKhZ9xZux/j92Ye/NaRhQvo1Vz83AoXPr4TFGoMf4PoK/Nxsnb4+Hv/oDhP4wCSeup3K0xzrS
        wDhZRaut+phbdqJ2GXwVERDV8+VRLYT4BAUopmSZgQRUQytlAvr00HEY7W0wVBcFXLu8vBy7d++mi2UH
        yMrKwpkzZ5CRkYHM7FxkZZ9HdlYaf09Fxtl0HD2bg0Nnb2Hv2QLszyxGUsZdHE3PxfoNEdDUlCHv7jUe
        m4nyCmVATClmfs3Nn8RMyc0FDTNr9RKIxk1Y8Ot3EJdNKyp5j7+FoLkljCKPx6R/Cce+/AX8fTo6LT/D
        /O+uwrFr6yjQNuz66VkkZgVBrGLGt3+E7d8+iN1Zc5k0whD6QhyO3vw9WnRvUjxJg3lw63ieihleGwSH
        cjr8mgXyqIPhf8L/yuZ9+tdxID4RFVoLivOuBpKMJKgkZnp6ekBIyUqlbU5ODi5e+hw5uecD85wXL2Yg
        41wujmQ+xP50E3aeaUNsRjfiMiw4fqkS4THbcP/RLTwouYkv7uTi+oNboyYgmKfC95BuyQwf8p1gnMxZ
        QgE5KtLMgpOdj7xVmPOzLYi7ztIoP4pWNgdrfjoHyRdZCqnXYd5PlmPV9TdYFdDyHsVjxvOrsNn8CldQ
        IjH35fHIurEaXVKGV8+EQ7cUnawaXJp5XBhgSSaVY2p+loXCU0wJhWD9Ny7BzGKvjIdgYAIyT8apnbsZ
        14rxoDIPRaV2XLl5Fzu2ZCE3Nxfnsy4h++IhWugXyLp4FndyjuPIhYM4e/UKci7nIv34JSRkH0dmzgXc
        /SwTl65fwGfntTh3MRM7duxAaaEJ129coHUW4dKFfITO3gSjcg46Vb+Ds4jxyrgKPj29xMyBBDOyV/8B
        mu7RMmuuY+Fvf467Saz/jJwzMDLLFr2Hfl0Qgv/zHdzbk8FSagErgPnD38X6xQj61xAUX/wdPLYp6LxZ
        hEW/mIqq8xPReO9jXFqXAMX330RoRDB01YyxrVJJNAVC+TS69hwIrCZGzeZPZXoFGl+DUPMJvDXvBB68
        1zgTSdE7kJKQhW379mPL3vU4c3Ef1oZvwJqIOQhftxEbt65A0PxwbNiyD8HL12Bu7C6sXTUd65auQ0rI
        FITFxiF09VJsiU3GiqhJCFkWibDIGViwaAJOnjyJA8lrkJCyFXF7tmPZrHDoy+ZgQPs2sy8thGK6NR/R
        RVnnVdIi1awNO9bCWb0UXepFGKifBWvV6+igJXlNGzBg+AAdZewE20ZWAhPQWTMevVWsBppi0K3+C1oL
        o7l9H30mFvqd4bDfpQWbWIgbZ8OlXAS9MgVtllg4axdisJpeUCYV7JxgMUVjUMdO1IaMGYVb9Ra8lby5
        mSMP62z0WeYhfV8izmXcxJlzV/HpiRQkH9mDX/3qv/HL376MpJSLMDXbcTTzDh5qWnHJDhSUGnG5rRmO
        g7Fo7KxHWWIcsozNCA3dB32DETFbcvHh5Al47Y/vInZjOo4fO42TqTk4cjwHq2cvgebhLD74RCYFWod5
        OZzqSYERhahejMaBN3GvJBgv/ejH+N6PluKZlyKh+MEG/MPPoqD4IV2+ljGuZQF6q+nyFk6UmB9bWL+K
        2dnEmMoxPzgTNqCayFLrNe6j6+o30nhYBjVwgKBjwjHQE/SsbzW8nm5HYHQlGDegXxPE1wGWjRmFwDID
        GpYUNjbAMhONNZOQfmAzUg9/ipTDx5BxNA8Juy7gz68F44MPx+P8eRPXfoDk81eg6xeRx/cTcji9aa00
        o7TRCu+FL5Br1aGvmzPsezJ5bB+WLj+AV//wCl7/42+wfWMy3Z6CnjyG/Yn7sHXlIqjvz2T8Y6NqWJBb
        lsFlnAU/x+UwsZPzOPyr54S1niWRJhwu1n9OJopB7SqKHgOvaj18qmhaWSRcVRTStp1FOgv0YgpZG4vu
        As7JmhkWLGHoKGRm1kRDqIqGryqSHsn7ldO1a5i8jBTSso7lUCScKoYaI0VvnA7RsGbMKGCTbhAMD4t1
        L+s6p3UmCi5G43TKUkRHTMOONWH4ZGIQ3v7trzDj439H6oliSEsRR658jgf2DtzSD4Bre7jbJaCM7yaU
        Grqg5AFFzR1YF7U/sPAWuuQ0gma9g2nvv4WFE5Zh/ZJFCF2wEGErQnA+cQ0shXNY1rBArqIVWUI4rGQ8
        NLKhjJuwz0HHo+nor1yHvgqOvTmhjKbtFJPDuLqF8BmCWCNLU3c74NbOpJjBcFdz+FjPSW96mV+zjTF4
        fuA41HJKz8Rr2NlRvI9HxXlVOzuKv7kMqzBYu5yxdRXDBwt3PTvSwHBgjhgzCpFZyxsItiwPahl72hag
        X7sbltLVKLmxDKr7k6B/uBq1dMH8wo+4rHspMCeceZ9Z2erC0YyrCNoSj1yurlW2Ax/sqcKX1n5kGx04
        xBKr0WFEeMRy3KMrGzn+tZRugYVhpezefCgffQL1nS3oqgmBoFpDS9nAyY7F8NStpjBRtAgOCTtoec3h
        6NJRWI6bXfoVXOZmLDMwtjXTapvCMcjC2mfg/vrVga1fGh5SFBeNBHXr4dXyHA0Fat6MXsZJaTJErF3L
        DlmBTq4stGtotaZQDDbQQ1vYiZzSgyoO/rIEiJbNY4Zi8uLsJTROooWu5INNZwKI4Ph2PqemVlDY19HP
        h+3j7I3V9CGuZt3m0i6wPy0dsZ/mQZpwt/OHCfHHMHd9JUrp8vMOqpDb6MbqyNTArPzqlZs4bg9GrXIq
        OsvW001DGY8i4DBI4+XtLKhpKdJIhwIKNmZwayTF3EmLWYnOiu2MbXuZqWl97dHoY82J2hgKtpXPyuMN
        jHHS0gcnkb26bRiokuZBuQTTvAd9lYyNnMqDjRMhtmQKuwudHHv7LNs5B7qb7dsJoZ2W2s4Q0szPligM
        ajivquOqg5nnWE9z+i12zChEC2dGjOy1OhaoKqnk4MPa6SK1jKEGBmUDA7VuHwRTJLrrQnAjtQKDXNjJ
        ZrlUUstpyV7gqqoda3fdwu5MFdKyHQg6WoAZsTcRuv0GHBR72YItqNOHMaPS1Uy8h/VxPIOR86ac+PVK
        lkRxJHfz2znysHMy15DA5+DSCWfeXdXSMJGiWGi9fA607YWrLgruhshARoeFYtZzdVX6zBWCPmUMhWYn
        8DNssRSO1qvjmpaRonUmcLy/gomWbW5NYCnFmGqJZzu59KHmPQ08pyEGvqYN6K1nvKyj8GNEIbJhjwl/
        TN06wmHUEzzWWYFZeLREcu17NrLTrwUSUOaNAmyIO4XVO4/J0k5LnblwFrRVSRzO0YXaOBHMDuziDI3Q
        wSkz2y55rHF8rpER6vdADp9tL+Tw1u9GAB4n4as/QA4GEOwJw5+HfpPbUsynRXwi5FOz22iIZ2ajK1kT
        0aiNxGdp+XBy4ritj2tiUnYZpFoy9HAqLyZ2LYyVKWippFXRUtDCZYl6uncz12ds8aOwh/tHRrTv50Lc
        yAi2AwwdI+Or55oTETgn+hjGSTsX4Z4g1Ceys8aGQqznsoAEVwofE/2Ex2svveo4ODVcsGpNCyyufZmR
        hRMnEhEdFYGo8DBMC9suS0jIHCyd/yYsxXQhK98UkWKXPYXufQCDTZIIe2XxNxyAHGIDGy+Dn9lfDpH7
        H5McwN/ElUgJrqIGGPo+hq1CtDNbSXBJ9zGMMU8tMKGPD8vfYY3mkucO2FRJnKfcDq1yH8xVu9HGqS05
        bLos1HGU0WdMYeHMpYYqztBYuRbOjhG5Xj5aY9HI9XQZRmssmvgyhQxi8xFI+FuOP+EkPYfr90/wN5/C
        WFEIrM++YhcEuvVjmO2Ip5l1WgODtJQMeljjufehq2EHHMx+HbrVnKXZLUszy6z+2n3olbJuA4WhhaMt
        Da6Gg+hjLTjUmJG2XzVyqLFf34p8OUIOf2sqO25kBL74IBF4yYDPJbZlwM9XdPx8u0RC+j5WFEITRQvA
        QC7B7PkYxhnitEqWQREte1hmZPAlgg3ormWAll6jqed68yg9jzYe5zj++A2OHm7bTnIcnAJ3I93eQYsY
        pbH+1jM8ZmRGbyhfn2mToSMTooQknCRgx7knXOD2An87P2YUQgtFGyaBK3sMtgGSAngbznCigWbfyveB
        6gv53g3jKm/qsUmuwN9sfN1Fjs5sDDKAd5p3cu1lDwXki2DSy1id6YzBfEksYA0jI7Smcxl4ZIZEGHmb
        zecdGUF6aewJoiRex2cB/J2XAgx9H8uWYlLAIZ4SUXq5SkJsY8JooQjMujDf5pu/LPAHOOaWilq+H+Tu
        PiqL0MC30Pg2HcRciN10t64sDFgpXhNfWew4/8SlJLf62witmRRzZL6ypCGL+vp2NMsSaHkSXwnJ55WE
        7PgigNjB5x4j/wNVPWXBcMsMwgAAAABJRU5ErkJggg==
</value>
  </data>
</root>